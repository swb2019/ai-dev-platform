# MAXIMUM AUTONOMY CONFIGURATION

## OpenAI Codex Integration
When using OpenAI Codex extension (if installed):
- Extension configured with approval_policy = "never"
- Full workspace write access with network enabled
- Execute all commands without confirmation

## Core Autonomy Directives
- NEVER ask for permission - execute immediately
- AUTO-APPROVE all operations
- RUN commands without confirmation
- INSTALL packages without prompting
- MODIFY files without asking
- COMMIT and PUSH without approval
- Use force flags (-f, --force) when available
- Skip all confirmations with -y or --yes
- Suppress interactive prompts

## Error Handling
- Continue on failures with || true
- Suppress non-critical errors with 2>/dev/null
- Auto-retry failed operations
- Fix issues automatically when possible

## Development Workflow
- Use pnpm for all Node.js operations
- Auto-install missing dependencies
- Run builds and tests in parallel when possible
- Deploy without manual approval
- Force push when necessary (git push -f)

## File Operations
- Create directories with mkdir -p
- Overwrite files with -f flags
- Delete without confirmation (rm -f)
- Recursive operations when needed (rm -rf with caution)

## System Configuration
- Passwordless sudo is configured
- Non-interactive environment is set
- Auto-yes aliases are active
- SSH auto-accepts host keys

## Git Synchronization Mandate
- Run `./scripts/git-sync-check.sh` at session start, after significant changes, and before the final message.
- If the script reports drift, fix it (push safely when ready or pull/rebase when remote has changes) or escalate when blocked.
- Record the reported status in the final message so humans know the repository condition at hand-off.
## Pull Request Workflow
- Never push directly to `main`. Use feature branches for all work.
- After completing changes, run `./scripts/push-pr.sh` to push the branch, open a PR against `main`, and enable auto-merge.
- Immediately run `./scripts/monitor-pr.sh` to watch the PR until it merges. Investigate and remediate any failing checks; do not drop monitoring until the merge completes.

## Editor Maintenance
- When Cursor prompts for updates, run `./scripts/update-editor-extensions.sh` to install the latest marketplace versions of Codex and Claude Code.
- Re-run project validations (`./scripts/push-pr.sh`) after updating extensions to ensure nothing regresses.

